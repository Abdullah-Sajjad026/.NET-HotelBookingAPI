// <auto-generated />
using System;
using HotelBookingAPI.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelBookingAPI.Migrations
{
    [DbContext(typeof(HotelBookingDbContext))]
    [Migration("20240616145627_BaseSchemaAndSeed")]
    partial class BaseSchemaAndSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Amenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmenityId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AmenityId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            AmenityId = 1,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1773),
                            Description = "Free Wi-Fi",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Free Wi-Fi",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1774)
                        },
                        new
                        {
                            AmenityId = 2,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1776),
                            Description = "Free Parking",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Free Parking",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1777)
                        },
                        new
                        {
                            AmenityId = 3,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1778),
                            Description = "Swimming Pool",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Swimming Pool",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1778)
                        },
                        new
                        {
                            AmenityId = 4,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1779),
                            Description = "Gym",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gym",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1779)
                        },
                        new
                        {
                            AmenityId = 5,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1780),
                            Description = "Spa",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Spa",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1780)
                        },
                        new
                        {
                            AmenityId = 6,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1781),
                            Description = "Restaurant",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Restaurant",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1781)
                        },
                        new
                        {
                            AmenityId = 7,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1782),
                            Description = "Bar",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bar",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1783)
                        },
                        new
                        {
                            AmenityId = 8,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1783),
                            Description = "Room Service",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Room Service",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1784)
                        },
                        new
                        {
                            AmenityId = 9,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1785),
                            Description = "Airport Shuttle",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Airport Shuttle",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1785)
                        },
                        new
                        {
                            AmenityId = 10,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1786),
                            Description = "Pet Friendly",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Pet Friendly",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1786)
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Cancellation", b =>
                {
                    b.Property<int>("CancellationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CancellationId"));

                    b.Property<DateTime>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CancellationFee")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CancellationId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Cancellations");

                    b.HasData(
                        new
                        {
                            CancellationId = 1,
                            CancellationDate = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4714),
                            CancellationFee = 50.00m,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4712),
                            IsDeleted = false,
                            Reason = "Change of plans",
                            ReservationId = 1,
                            Status = 0,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4713)
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CountryId");

                    b.HasIndex("CountryCode")
                        .IsUnique();

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryCode = "US",
                            CountryName = "United States",
                            IsActive = true
                        },
                        new
                        {
                            CountryId = 2,
                            CountryCode = "CA",
                            CountryName = "Canada",
                            IsActive = true
                        },
                        new
                        {
                            CountryId = 3,
                            CountryCode = "UK",
                            CountryName = "United Kingdom",
                            IsActive = true
                        },
                        new
                        {
                            CountryId = 4,
                            CountryCode = "PK",
                            CountryName = "Pakistan",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.CountryState", b =>
                {
                    b.Property<int>("CountryStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryStateId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CountryStateId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StateCode")
                        .IsUnique();

                    b.ToTable("CountryStates");

                    b.HasData(
                        new
                        {
                            CountryStateId = 1,
                            CountryId = 1,
                            StateCode = "CA",
                            StateName = "California"
                        },
                        new
                        {
                            CountryStateId = 2,
                            CountryId = 1,
                            StateCode = "NY",
                            StateName = "New York"
                        },
                        new
                        {
                            CountryStateId = 3,
                            CountryId = 2,
                            StateCode = "ON",
                            StateName = "Ontario"
                        },
                        new
                        {
                            CountryStateId = 4,
                            CountryId = 2,
                            StateCode = "QC",
                            StateName = "Quebec"
                        },
                        new
                        {
                            CountryStateId = 5,
                            CountryId = 3,
                            StateCode = "ENG",
                            StateName = "England"
                        },
                        new
                        {
                            CountryStateId = 6,
                            CountryId = 3,
                            StateCode = "SCT",
                            StateName = "Scotland"
                        },
                        new
                        {
                            CountryStateId = 7,
                            CountryId = 4,
                            StateCode = "PB",
                            StateName = "Punjab"
                        },
                        new
                        {
                            CountryStateId = 8,
                            CountryId = 4,
                            StateCode = "SD",
                            StateName = "Sindh"
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("GuestId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            FeedbackId = 1,
                            Comment = "Great service!",
                            FeedbackDate = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(5004),
                            GuestId = 0,
                            IsDeleted = false,
                            Rating = 5,
                            ReservationId = 1
                        },
                        new
                        {
                            FeedbackId = 2,
                            Comment = "Good service!",
                            FeedbackDate = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(5006),
                            GuestId = 0,
                            IsDeleted = false,
                            Rating = 4,
                            ReservationId = 2
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuestId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CountryStateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GuestId");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("UserId");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            GuestId = 1,
                            Address = "1234 Elm St",
                            Age = 25,
                            CountryStateId = 1,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 731, DateTimeKind.Utc).AddTicks(2391),
                            Email = "johndoe@example.com",
                            FirstName = "John",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Doe",
                            Phone = "1234567890",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 731, DateTimeKind.Utc).AddTicks(2393)
                        },
                        new
                        {
                            GuestId = 2,
                            Address = "5678 Oak St",
                            Age = 30,
                            CountryStateId = 2,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 731, DateTimeKind.Utc).AddTicks(3162),
                            Email = "janedoe@example.com",
                            FirstName = "Jane",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Doe",
                            Phone = "0987654321",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 731, DateTimeKind.Utc).AddTicks(3162)
                        },
                        new
                        {
                            GuestId = 3,
                            Address = "2468 Pine St",
                            Age = 35,
                            CountryStateId = 3,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 731, DateTimeKind.Utc).AddTicks(3166),
                            Email = "alicesmith@example.com",
                            FirstName = "Alice",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Smith",
                            Phone = "1357924680",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 731, DateTimeKind.Utc).AddTicks(3166)
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentBatchId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("PaymentBatchId");

                    b.HasIndex("ReservationId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            Amount = 50.00m,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4636),
                            IsDeleted = false,
                            PaymentBatchId = 1,
                            ReservationId = 1,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4636)
                        },
                        new
                        {
                            PaymentId = 2,
                            Amount = 50.00m,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4639),
                            IsDeleted = false,
                            PaymentBatchId = 1,
                            ReservationId = 1,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4639)
                        },
                        new
                        {
                            PaymentId = 3,
                            Amount = 200.00m,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4641),
                            IsDeleted = false,
                            PaymentBatchId = 2,
                            ReservationId = 2,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4641)
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.PaymentBatch", b =>
                {
                    b.Property<int>("PaymentBatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentBatchId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentBatchId");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentBatches");

                    b.HasData(
                        new
                        {
                            PaymentBatchId = 1,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4557),
                            IsDeleted = false,
                            IsPaid = true,
                            PaymentDate = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4559),
                            TotalAmount = 100.00m,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4557),
                            UserId = 1
                        },
                        new
                        {
                            PaymentBatchId = 2,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4562),
                            IsDeleted = false,
                            IsPaid = true,
                            PaymentDate = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4563),
                            TotalAmount = 200.00m,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4562),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Refund", b =>
                {
                    b.Property<int>("RefundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefundId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RefundDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefundMethodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RefundId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("ProcessedByUserId");

                    b.HasIndex("RefundMethodId");

                    b.ToTable("Refunds");

                    b.HasData(
                        new
                        {
                            RefundId = 1,
                            Amount = 50.00m,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4921),
                            Description = "Refund for cancellation",
                            IsDeleted = false,
                            PaymentId = 1,
                            ProcessedByUserId = 1,
                            RefundDate = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4924),
                            RefundMethodId = 1,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4922)
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.RefundMethod", b =>
                {
                    b.Property<int>("RefundMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefundMethodId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RefundMethodId");

                    b.ToTable("RefundMethods");

                    b.HasData(
                        new
                        {
                            RefundMethodId = 1,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4832),
                            Description = "Refund via bank transfer",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bank Transfer",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4832)
                        },
                        new
                        {
                            RefundMethodId = 2,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4836),
                            Description = "Refund via credit card",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Credit Card",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4836)
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasComment("The user who made the reservation");

                    b.HasKey("ReservationId");

                    b.HasIndex("UserId");

                    b.HasIndex("RoomId", "CheckInDate", "CheckOutDate")
                        .IsUnique();

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            BookingDate = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4327),
                            CheckInDate = new DateTime(2024, 6, 17, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4327),
                            CheckOutDate = new DateTime(2024, 6, 19, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4333),
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4324),
                            IsActive = true,
                            IsDeleted = false,
                            NumberOfGuests = 2,
                            RoomId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4324),
                            UserId = 0
                        },
                        new
                        {
                            ReservationId = 2,
                            BookingDate = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4335),
                            CheckInDate = new DateTime(2024, 6, 15, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4336),
                            CheckOutDate = new DateTime(2024, 6, 18, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4344),
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4334),
                            IsActive = true,
                            IsDeleted = false,
                            NumberOfGuests = 1,
                            RoomId = 2,
                            Status = 2,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4335),
                            UserId = 0
                        },
                        new
                        {
                            ReservationId = 3,
                            BookingDate = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4346),
                            CheckInDate = new DateTime(2024, 6, 18, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4347),
                            CheckOutDate = new DateTime(2024, 6, 20, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4347),
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4345),
                            IsActive = true,
                            IsDeleted = false,
                            NumberOfGuests = 3,
                            RoomId = 3,
                            Status = 4,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(4346),
                            UserId = 0
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.ReservationGuest", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("ReservationGuests");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            GuestId = 1
                        },
                        new
                        {
                            ReservationId = 1,
                            GuestId = 2
                        },
                        new
                        {
                            ReservationId = 2,
                            GuestId = 3
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("BedType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViewType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            BedType = "Single",
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1588),
                            IsActive = true,
                            IsDeleted = false,
                            Price = 100m,
                            RoomNumber = "101",
                            RoomTypeId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1591),
                            ViewType = "City"
                        },
                        new
                        {
                            RoomId = 2,
                            BedType = "Double",
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1598),
                            IsActive = true,
                            IsDeleted = false,
                            Price = 150m,
                            RoomNumber = "102",
                            RoomTypeId = 2,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1598),
                            ViewType = "Sea"
                        },
                        new
                        {
                            RoomId = 3,
                            BedType = "King",
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1601),
                            IsActive = true,
                            IsDeleted = false,
                            Price = 200m,
                            RoomNumber = "103",
                            RoomTypeId = 3,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 94, DateTimeKind.Utc).AddTicks(1601),
                            ViewType = "Mountain"
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.RoomAmenity", b =>
                {
                    b.Property<int>("AmenityId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("AmenityId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomAmenities");

                    b.HasData(
                        new
                        {
                            AmenityId = 1,
                            RoomId = 1
                        },
                        new
                        {
                            AmenityId = 2,
                            RoomId = 1
                        },
                        new
                        {
                            AmenityId = 3,
                            RoomId = 1
                        },
                        new
                        {
                            AmenityId = 4,
                            RoomId = 2
                        },
                        new
                        {
                            AmenityId = 5,
                            RoomId = 2
                        },
                        new
                        {
                            AmenityId = 6,
                            RoomId = 2
                        },
                        new
                        {
                            AmenityId = 7,
                            RoomId = 3
                        },
                        new
                        {
                            AmenityId = 8,
                            RoomId = 3
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.RoomType", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomTypeId"));

                    b.Property<string>("AccessibilityFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RoomTypeId");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            RoomTypeId = 1,
                            AccessibilityFeatures = "Wheelchair Accessible",
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 93, DateTimeKind.Utc).AddTicks(5514),
                            Description = "Single Bed",
                            IsActive = true,
                            TypeName = "Single",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 93, DateTimeKind.Utc).AddTicks(5518)
                        },
                        new
                        {
                            RoomTypeId = 2,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 93, DateTimeKind.Utc).AddTicks(5523),
                            Description = "Double Bed",
                            IsActive = true,
                            TypeName = "Double",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 93, DateTimeKind.Utc).AddTicks(5523)
                        },
                        new
                        {
                            RoomTypeId = 3,
                            AccessibilityFeatures = "Accessible Bathroom, Wheelchair Accessible, Roll-in Shower",
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 93, DateTimeKind.Utc).AddTicks(5524),
                            Description = "Suite",
                            IsActive = true,
                            TypeName = "Suite",
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 27, 93, DateTimeKind.Utc).AddTicks(5524)
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 998, DateTimeKind.Utc).AddTicks(6796),
                            Email = "admin@jabsihotels.com",
                            IsActive = true,
                            IsDeleted = false,
                            LastLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$10$KEjTVVe3KZPemkzylCI.HO:$2a$10$KEjTVVe3KZPemkzylCI.HO098gpB.27EN7NHcG0zQO6aIflMpdifa",
                            RoleId = 1,
                            UpdatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 998, DateTimeKind.Utc).AddTicks(6797)
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 998, DateTimeKind.Utc).AddTicks(6573),
                            Description = "Admin role has full access to all resources",
                            IsActive = true,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedAt = new DateTime(2024, 6, 16, 14, 56, 26, 998, DateTimeKind.Utc).AddTicks(6578),
                            Description = "User role has limited access to resources",
                            IsActive = true,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Cancellation", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.CountryState", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Feedback", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HotelBookingAPI.Data.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Guest", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.CountryState", "CountryState")
                        .WithMany()
                        .HasForeignKey("CountryStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingAPI.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CountryState");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Payment", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.PaymentBatch", "PaymentBatch")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingAPI.Data.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentBatch");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.PaymentBatch", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.User", "User")
                        .WithMany("PaymentBatches")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Refund", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingAPI.Data.Models.User", "ProcessedByUser")
                        .WithMany()
                        .HasForeignKey("ProcessedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingAPI.Data.Models.RefundMethod", "RefundMethod")
                        .WithMany("Refunds")
                        .HasForeignKey("RefundMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("ProcessedByUser");

                    b.Navigation("RefundMethod");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Reservation", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingAPI.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.ReservationGuest", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingAPI.Data.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Room", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.RoomAmenity", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.Amenity", "Amenity")
                        .WithMany()
                        .HasForeignKey("AmenityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBookingAPI.Data.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.User", b =>
                {
                    b.HasOne("HotelBookingAPI.Data.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.PaymentBatch", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.RefundMethod", b =>
                {
                    b.Navigation("Refunds");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.User", b =>
                {
                    b.Navigation("PaymentBatches");
                });

            modelBuilder.Entity("HotelBookingAPI.Data.Models.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
